{"version":3,"sources":["serviceWorker.js","actions/index.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/themeSelected.js","reducers/index.js","sagas/index.js","commons/Theme/index.js","selectors/index.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","components/EmptyTodoList.js","containers/VisibleTodoList.js","components/Filter.js","containers/FilterTodos.js","components/AppBar.js","components/Switch.js","containers/ThemeSwitcher.js","components/App.js","containers/ThemedApp.js","index.js","store/configureStore.js"],"names":["Boolean","window","location","hostname","match","INVALIDATE_TODOS","addTodo","Text","type","ID","Date","getTime","requestTodos","receiveTodos","todos","receivedAt","setMilliseconds","VisibilityFilters","ThemeSelectors","cookies","Cookies","initialState","items","isFetching","state","arguments","length","undefined","action","Object","objectSpread","todosCookies","get","lastUpdated","Completed","concat","toConsumableArray","set","path","newTodos","splice","idx","todosState","map","todo","SHOW_ALL","visibilityFilter","filter","AUTUMN","themeSelected","combineReducers","invalidateTodos","fetchTodos","startup","rootSaga","regenerator_default","a","wrap","_context","prev","next","take","actions","call","stop","_marked","_context2","put","_marked2","_context3","fork","_marked3","_context4","_marked4","summerTheme","createMuiTheme","palette","primary","yellow","secondary","blue","background","default","winterTheme","grey","light","autumnTheme","amber","orange","springTheme","green","brown","SHOW_COMPLETED","SHOW_ACTIVE","WINTER","SUMMER","getVisibleTodos","createSelector","t","useStyles","makeStyles","theme","margin","backgroundColor","floatingLabelFocusStyle","color","connect","_ref","dispatch","classes","textCookie","_useState","useState","_useState2","slicedToArray","text","setText","_useState3","_useState4","error","setError","handleSubmit","trim","react_default","createElement","TextField","id","label","variant","value","fullWidth","onChange","event","target","onKeyPress","key","className","multiline","rowsMax","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","onClick","disabled","Tooltip","title","Send_default","breakWord","overflowWrap","Todo","onRemove","ListItem","dense","button","divider","ListItemIcon","Checkbox","checked","tabIndex","disableRipple","inputProps","aria-labelledby","ListItemText","Typography","style","textDecoration","ListItemSecondaryAction","DeleteForever_default","TodoList","toggleTodo","removeTodo","List","components_Todo","assign","EmptyTodoList","Assignment_default","ownProps","refreshTodos","props","components_EmptyTodoList","opacity","components_TodoList","Filter","setFilter","FormControl","InputLabel","htmlFor","Select","IconComponent","FilterList","MenuItem","setVisibilityFilter","padding","spacing","root","flexGrow","grow","menuButton","marginRight","appBar","main","fabButton","zIndex","top","left","right","TodoApBar","AppBar","elevation","Toolbar","FilterTodos","SPRING","switch","ThemeSwitcher","changeTheme","darkMode","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","LocalFlorist_default","WbSunny_default","Spa_default","AcUnit_default","setThemeSelected","Switch","height","header","gridItem","width","app","display","footer","bottom","todosMobile","overflowY","todosDesktop","App","useTheme","matches","useMediaQuery","breakpoints","up","ThemeProvider","Grid","container","alignItems","justify","direction","item","xs","Paper","components_AppBar","react_router","exact","render","containers_VisibleTodoList","containers_AddTodo","containers_ThemeSwitcher","getTheme","store","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","runSaga","run","configureStore","es","react_router_dom","ThemedApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e25dbf1f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","/*\r\n * action types\r\n */\r\n\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\r\nexport const REQUEST_TODOS = \"REQUEST_TODOS\";\r\nexport const RECEIVE_TODOS = \"RECEIVE_TODOS\";\r\nexport const INVALIDATE_TODOS = \"INVALIDATE_TODOS\";\r\n\r\nexport const SET_THEME_SELECTED = \"SET_THEME_SELECTED\";\r\n\r\nexport const addTodo = Text => ({\r\n  type: ADD_TODO,\r\n  ID: new Date().getTime(),\r\n  Text\r\n});\r\n\r\nexport const removeTodo = idx => ({\r\n  type: REMOVE_TODO,\r\n  idx\r\n});\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: SET_VISIBILITY_FILTER,\r\n  filter\r\n});\r\n\r\nexport const toggleTodo = ID => ({\r\n  type: TOGGLE_TODO,\r\n  ID\r\n});\r\n\r\nexport const invalidateTodos = () => ({\r\n  type: INVALIDATE_TODOS\r\n});\r\n\r\nexport const requestTodos = () => ({\r\n  type: REQUEST_TODOS\r\n});\r\n\r\nexport const receiveTodos = todos => ({\r\n  type: RECEIVE_TODOS,\r\n  todos,\r\n  receivedAt: new Date().setMilliseconds(0)\r\n});\r\n\r\nexport const VisibilityFilters = {\r\n  SHOW_ALL: \"SHOW_ALL\",\r\n  SHOW_COMPLETED: \"SHOW_COMPLETED\",\r\n  SHOW_ACTIVE: \"SHOW_ACTIVE\"\r\n};\r\n\r\nexport const ThemeSelectors = {\r\n  AUTUMN: \"AUTUMN\",\r\n  WINTER: \"WINTER\",\r\n  SUMMER: \"SUMMER\",\r\n  SPRING: \"SPRING\"\r\n};\r\n\r\nexport const setThemeSelected = themeSelected => ({\r\n  type: SET_THEME_SELECTED,\r\n  themeSelected\r\n});\r\n","import {\r\n  ADD_TODO,\r\n  REMOVE_TODO,\r\n  TOGGLE_TODO,\r\n  RECEIVE_TODOS,\r\n  REQUEST_TODOS\r\n} from \"../actions\";\r\nimport Cookies from \"universal-cookie\";\r\nconst cookies = new Cookies();\r\n\r\nconst initialState = {\r\n  items: [],\r\n  isFetching: false\r\n};\r\n\r\nconst todos = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REQUEST_TODOS:\r\n      return { ...state, isFetching: true };\r\n    case RECEIVE_TODOS:\r\n      const todosCookies = cookies.get(\"todos\");\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        items: todosCookies ? todosCookies : action.todos,\r\n        lastUpdated: action.receivedAt\r\n      };\r\n    case ADD_TODO:\r\n      const todos = [\r\n        {\r\n          ID: action.ID,\r\n          Text: action.Text,\r\n          Completed: false\r\n        },\r\n        ...state.items\r\n      ];\r\n      cookies.set(\"todos\", todos, { path: \"/\" });\r\n      return {\r\n        ...state,\r\n        items: todos\r\n      };\r\n    case REMOVE_TODO:\r\n      const newTodos = [...state.items];\r\n      newTodos.splice(action.idx, 1);\r\n      cookies.set(\"todos\", newTodos, { path: \"/\" });\r\n      return {\r\n        ...state,\r\n        items: newTodos\r\n      };\r\n    case TOGGLE_TODO:\r\n      const todosState = state.items.map(todo =>\r\n        todo.ID === action.ID ? { ...todo, Completed: !todo.Completed } : todo\r\n      );\r\n      cookies.set(\"todos\", todosState, { path: \"/\" });\r\n      return {\r\n        ...state,\r\n        items: todosState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;\r\n","import { SET_VISIBILITY_FILTER, VisibilityFilters } from \"../actions\";\r\nimport Cookies from \"universal-cookie\";\r\nconst cookies = new Cookies();\r\n\r\nconst { SHOW_ALL } = VisibilityFilters;\r\nconst initialState = cookies.get(\"visibilityFilter\") || SHOW_ALL;\r\n\r\nconst visibilityFilter = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_VISIBILITY_FILTER:\r\n      cookies.set(\"visibilityFilter\", action.filter, { path: \"/\" });\r\n      return action.filter;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default visibilityFilter;\r\n","import { ThemeSelectors, SET_THEME_SELECTED } from \"../actions\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst { AUTUMN } = ThemeSelectors;\r\n\r\nconst initialState = cookies.get(\"theme\") || AUTUMN;\r\n\r\nconst themeSelected = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_THEME_SELECTED:\r\n      cookies.set(\"theme\", action.themeSelected, { path: \"/\" });\r\n      return action.themeSelected;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default themeSelected;\r\n","import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\nimport visibilityFilter from \"./visibilityFilter\";\r\nimport themeSelected from \"./themeSelected\";\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter,\r\n  themeSelected\r\n});\r\n","import { take, call, put, fork } from \"redux-saga/effects\";\r\nimport * as actions from \"../actions\";\r\n// import { api } from \"../services\";\r\nimport Cookies from \"universal-cookie\";\r\nconst cookies = new Cookies();\r\n\r\nexport function* invalidateTodos() {\r\n  while (true) {\r\n    yield take(actions.INVALIDATE_TODOS);\r\n    yield call(fetchTodos);\r\n  }\r\n}\r\n\r\nexport function* fetchTodos() {\r\n  yield put(actions.requestTodos());\r\n\r\n  const todosCookies = cookies.get(\"todos\");\r\n  let todos = todosCookies || [];\r\n  // if (todosCookies) {\r\n  //   todos = todosCookies;\r\n  // } else {\r\n  //   todos = yield call(api.fetchTodos);\r\n  //   cookies.set(\"todos\", todos, { path: \"/\" });\r\n  // }\r\n  yield put(actions.receiveTodos(todos));\r\n}\r\n\r\nexport function* startup() {\r\n  yield fork(fetchTodos);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield fork(startup);\r\n  yield fork(invalidateTodos);\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n  green,\r\n  brown,\r\n  orange,\r\n  blue,\r\n  grey,\r\n  amber,\r\n  yellow\r\n} from \"@material-ui/core/colors\";\r\n\r\nexport const summerTheme = createMuiTheme({\r\n  palette: {\r\n    primary: yellow,\r\n    secondary: blue,\r\n    background: {\r\n      default: \"#ffee58\"\r\n    }\r\n  }\r\n});\r\n\r\nexport const winterTheme = createMuiTheme({\r\n  palette: {\r\n    primary: grey,\r\n    secondary: grey,\r\n    background: {\r\n      default: \"#e0e0e0\",\r\n      light: \"#f5f5f5\"\r\n    }\r\n  }\r\n});\r\n\r\nexport const autumnTheme = createMuiTheme({\r\n  palette: {\r\n    primary: amber,\r\n    secondary: orange,\r\n    background: {\r\n      default: \"#ffca28\"\r\n    }\r\n  }\r\n});\r\n\r\nexport const springTheme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    secondary: brown,\r\n    background: {\r\n      default: \"#66bb6a\"\r\n    }\r\n  }\r\n});\r\n","import { createSelector } from \"reselect\";\r\nimport { VisibilityFilters, ThemeSelectors } from \"../actions\";\r\nimport {\r\n  winterTheme,\r\n  autumnTheme,\r\n  springTheme,\r\n  summerTheme\r\n} from \"../commons/Theme\";\r\nconst { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } = VisibilityFilters;\r\nconst { WINTER, SUMMER, AUTUMN } = ThemeSelectors;\r\nconst getVisibilityFilter = state => state.visibilityFilter;\r\nconst getTodos = state => state.todos.items;\r\n\r\nexport const getVisibleTodos = createSelector(\r\n  [getVisibilityFilter, getTodos],\r\n  (visibilityFilter, todos) => {\r\n    switch (visibilityFilter) {\r\n      case SHOW_ALL:\r\n        return todos;\r\n      case SHOW_COMPLETED:\r\n        return todos.filter(t => t.Completed);\r\n      case SHOW_ACTIVE:\r\n        return todos.filter(t => !t.Completed);\r\n      default:\r\n        return todos;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getTheme = themeSelected => {\r\n  switch (themeSelected) {\r\n    case WINTER:\r\n      return winterTheme;\r\n    case AUTUMN:\r\n      return autumnTheme;\r\n    case SUMMER:\r\n      return summerTheme;\r\n    default:\r\n      return springTheme;\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../actions\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  addTodo: {\r\n    margin: 0,\r\n    backgroundColor: theme.palette.primary.light\r\n  },\r\n  floatingLabelFocusStyle: {\r\n    color: \"#FFF\"\r\n  }\r\n}));\r\nconst cookies = new Cookies();\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  const classes = useStyles();\r\n\r\n  const textCookie = cookies.get(\"text\") ? cookies.get(\"text\") : \"\";\r\n  const [text, setText] = useState(textCookie);\r\n  const [error, setError] = useState(false);\r\n  function handleSubmit() {\r\n    if (text && text.trim() !== \"\") {\r\n      dispatch(addTodo(text));\r\n      setError(false);\r\n      setText(\"\");\r\n    } else {\r\n      setError(true);\r\n    }\r\n  }\r\n\r\n  function handleChange(event) {\r\n    cookies.set(\"text\", event.target.value, { path: \"/\" });\r\n    setText(event.target.value);\r\n  }\r\n\r\n  function onKeyPressed(event) {\r\n    if (event.key === \"Enter\") {\r\n      handleSubmit();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TextField\r\n      id=\"text\"\r\n      label=\"Whatcha want to do?\"\r\n      margin=\"normal\"\r\n      variant=\"filled\"\r\n      value={text}\r\n      error={error}\r\n      fullWidth\r\n      onChange={handleChange}\r\n      onKeyPress={onKeyPressed}\r\n      className={classes.addTodo}\r\n      multiline\r\n      rowsMax={3}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"add todo\"\r\n              onClick={handleSubmit}\r\n              disabled={text.trim() === \"\"}\r\n            >\r\n              <Tooltip title=\"Add todo\">\r\n                <SendIcon />\r\n              </Tooltip>\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect()(AddTodo);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForever\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  breakWord: {\r\n    overflowWrap: \"break-word\"\r\n  },\r\n  todo: {\r\n    // color: theme.palette.primary.dark\r\n  }\r\n}));\r\n\r\nconst Todo = ({ onClick, onRemove, Completed, Text, ID }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ListItem className={classes.todo} dense button onClick={onClick} divider>\r\n      <ListItemIcon>\r\n        <Checkbox\r\n          edge=\"start\"\r\n          checked={Completed}\r\n          tabIndex={-1}\r\n          disableRipple\r\n          inputProps={{ \"aria-labelledby\": ID }}\r\n        />\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        id={ID}\r\n        primary={\r\n          <Typography variant=\"body1\" className={classes.breakWord}>\r\n            {Text}\r\n          </Typography>\r\n        }\r\n        style={{\r\n          textDecoration: Completed ? \"line-through\" : \"none\"\r\n        }}\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <Tooltip title=\"Remove todo\">\r\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={onRemove}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nTodo.propTypes = {\r\n  ID: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  Completed: PropTypes.bool.isRequired,\r\n  Text: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Todo from \"./Todo\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nconst TodoList = ({ todos, toggleTodo, removeTodo }) => (\r\n  <List>\r\n    {todos.map((todo, idx) => (\r\n      <Todo\r\n        key={todo.ID}\r\n        {...todo}\r\n        onClick={() => toggleTodo(todo.ID)}\r\n        onRemove={() => removeTodo(idx)}\r\n      />\r\n    ))}\r\n  </List>\r\n);\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      ID: PropTypes.number.isRequired,\r\n      Completed: PropTypes.bool.isRequired,\r\n      Text: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  removeTodo: PropTypes.func.isRequired,\r\n  toggleTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\nconst EmptyTodoList = () => (\r\n  <List>\r\n    <ListItem>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Your have no active todos. Try adding something\" />\r\n    </ListItem>\r\n  </List>\r\n);\r\n\r\nexport default EmptyTodoList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleTodo, invalidateTodos, removeTodo } from \"../actions\";\r\nimport TodoList from \"../components/TodoList\";\r\nimport { getVisibleTodos } from \"../selectors\";\r\nimport EmptyTodoList from \"../components/EmptyTodoList\";\r\nfunction VisibleTodoList(props) {\r\n  const { todos, isFetching, toggleTodo, removeTodo } = props;\r\n\r\n  // function handleRefreshClick(e) {\r\n  //   e.preventDefault();\r\n  //   refreshTodos();\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      {/* <p>\r\n        {lastUpdated && (\r\n          <span>\r\n            Last updated at {new Date(lastUpdated).toLocaleTimeString()}.{\" \"}\r\n          </span>\r\n        )}\r\n        {!isFetching && <button onClick={handleRefreshClick}>Refresh</button>}\r\n      </p> */}\r\n      {isFetching && todos.length === 0 && <h2>Loading...</h2>}\r\n      {!isFetching && todos.length === 0 && <EmptyTodoList />}\r\n      {todos.length > 0 && (\r\n        <div style={{ opacity: isFetching ? 0.5 : 1 }}>\r\n          <TodoList\r\n            todos={todos}\r\n            toggleTodo={toggleTodo}\r\n            removeTodo={removeTodo}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nVisibleTodoList.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  lastUpdated: PropTypes.number,\r\n  refreshTodos: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  let { isFetching, lastUpdated } = state.todos || {\r\n    isFetching: true,\r\n    todos: []\r\n  };\r\n\r\n  const todos = getVisibleTodos(state);\r\n\r\n  return {\r\n    todos,\r\n    isFetching,\r\n    lastUpdated,\r\n    cookies: ownProps.cookies\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  removeTodo: ID => dispatch(removeTodo(ID)),\r\n  toggleTodo: ID => dispatch(toggleTodo(ID)),\r\n  refreshTodos: () => dispatch(invalidateTodos())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VisibleTodoList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport { VisibilityFilters } from \"../actions\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } = VisibilityFilters;\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n  function handleChange(event) {\r\n    setFilter(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <FormControl>\r\n      <InputLabel htmlFor=\"filter\">Filter</InputLabel>\r\n      <Select value={filter} onChange={handleChange} IconComponent={FilterList}>\r\n        <MenuItem value={SHOW_ALL}>All</MenuItem>\r\n        <MenuItem value={SHOW_ACTIVE}>Active</MenuItem>\r\n        <MenuItem value={SHOW_COMPLETED}>Completed</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  setFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from \"react-redux\";\r\nimport { setVisibilityFilter } from \"../actions\";\r\nimport Filter from \"../components/Filter\";\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.visibilityFilter\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFilter: filter => dispatch(setVisibilityFilter(filter))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Filter);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport FilterTodos from \"../containers/FilterTodos\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0)\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  appBar: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\"\r\n  }\r\n}));\r\n\r\nconst TodoApBar = props => {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      position=\"sticky\"\r\n      color=\"primary\"\r\n      className={classes.appBar}\r\n    >\r\n      <Toolbar>\r\n        <Typography className={classes.title} variant=\"h6\">\r\n          To Dos\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <FilterTodos />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default TodoApBar;\r\n","import React from \"react\";\r\nimport { ThemeSelectors } from \"../actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport WinterIcon from \"@material-ui/icons/AcUnit\";\r\nimport Springicon from \"@material-ui/icons/LocalFlorist\";\r\nimport SummerIcon from \"@material-ui/icons/WbSunny\";\r\nimport AutumnIcon from \"@material-ui/icons/Spa\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst { WINTER, AUTUMN, SPRING, SUMMER } = ThemeSelectors;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  switch: {\r\n    backgroundColor: theme.palette.background.default\r\n  }\r\n}));\r\n\r\nconst ThemeSwitcher = props => {\r\n  const { changeTheme, darkMode, themeSelected } = props;\r\n  const classes = useStyles();\r\n\r\n  function handleChange(event) {\r\n    changeTheme(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={themeSelected}\r\n      onChange={(event, newValue) => changeTheme(newValue)}\r\n      showLabels\r\n    >\r\n      <BottomNavigationAction\r\n        value={SPRING}\r\n        label=\"Spring\"\r\n        icon={<Springicon />}\r\n      />\r\n      <BottomNavigationAction\r\n        value={SUMMER}\r\n        label=\"Summer\"\r\n        icon={<SummerIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        value={AUTUMN}\r\n        label=\"AUTUMN\"\r\n        icon={<AutumnIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        value={WINTER}\r\n        label=\"Winter\"\r\n        icon={<WinterIcon />}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n};\r\n\r\nThemeSwitcher.propTypes = {\r\n  darkMode: PropTypes.bool.isRequired,\r\n  changeTheme: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ThemeSwitcher;\r\n","import { connect } from \"react-redux\";\r\nimport { setThemeSelected } from \"../actions\";\r\nimport Switch from \"../components/Switch\";\r\nimport { ThemeSelectors } from \"../actions\";\r\nconst { WINTER } = ThemeSelectors;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    darkMode: state.themeSelected === WINTER,\r\n    themeSelected: state.themeSelected\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeTheme: themeSelected => dispatch(setThemeSelected(themeSelected))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Switch);\r\n","import React from \"react\";\r\nimport AddTodo from \"../containers/AddTodo\";\r\nimport VisibleTodoList from \"../containers/VisibleTodoList\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport AppBar from \"./AppBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport ThemeSwitcher from \"../containers/ThemeSwitcher\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: \"100%\",\r\n    margin: 0,\r\n    padding: 0\r\n  },\r\n  header: {\r\n    position: \"sticky\",\r\n    top: 0\r\n  },\r\n\r\n  gridItem: {\r\n    width: \"50%\"\r\n  },\r\n  app: {\r\n    height: \"100%\",\r\n    display: \"flex\"\r\n  },\r\n  footer: {\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    width: \"100%\"\r\n  },\r\n  todosMobile: {\r\n    overflowY: \"auto\",\r\n    height: \"75%\"\r\n  },\r\n  todosDesktop: {\r\n    overflowY: \"auto\",\r\n    height: \"300px\"\r\n  }\r\n}));\r\n\r\nconst App = props => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  return (\r\n    <ThemeProvider theme={props.theme}>\r\n      <Grid\r\n        container\r\n        alignItems={matches ? \"center\" : \"stretch\"}\r\n        justify={matches ? \"center\" : \"flex-start\"}\r\n        direction={matches ? \"column\" : \"row\"}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={matches ? false : 12}\r\n          className={matches ? classes.gridItem : \"\"}\r\n        >\r\n          <Paper className={classes.root}>\r\n            {/* <AppHeader /> */}\r\n            <AppBar />\r\n\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              className={matches ? classes.todosDesktop : classes.todosMobile}\r\n            >\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() => <VisibleTodoList cookies={props.cookies} />}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={matches ? \"\" : classes.footer}>\r\n              <AddTodo />\r\n              <ThemeSwitcher />\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { connect } from \"react-redux\";\r\nimport { getTheme } from \"../selectors\";\r\nimport App from \"../components/App\";\r\n\r\nconst mapStateToProps = state => {\r\n  const theme = getTheme(state.themeSelected);\r\n  return {\r\n    theme\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(App);\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport configureStore from \"./store/configureStore\";\r\nimport rootSaga from \"./sagas\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"typeface-roboto\";\r\nimport ThemedApp from \"./containers/ThemedApp\";\r\nimport \"./index.css\";\r\n\r\nconst store = configureStore();\r\n\r\nstore.runSaga(rootSaga);\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <ThemedApp />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your ThemedApp to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nexport default function configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  return {\r\n    ...createStore(rootReducer, applyMiddleware(sagaMiddleware)),\r\n    runSaga: sagaMiddleware.run\r\n  };\r\n}\r\n"],"sourceRoot":""}